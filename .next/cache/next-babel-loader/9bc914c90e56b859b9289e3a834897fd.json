{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/arstrel/practice/server side rendering/ssr/pages/index.js\";\nvar __jsx = React.createElement;\nimport './index.css';\nimport Card from './Card';\nimport React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { initialCards, addItem } from '../store';\nimport { connect } from 'react-redux';\n\nvar Index =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  function Index() {\n    _classCallCheck(this, Index);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Index).apply(this, arguments));\n  }\n\n  _createClass(Index, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, __jsx(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        src: \"/static/logo.png\",\n        className: \"static-logo\",\n        alt: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        className: \"Grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, this.props.cards.map(function (eachCard) {\n        return __jsx(Card, {\n          key: eachCard.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        });\n      })));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var store;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                store = _ref.store;\n                store.dispatch(initialCards());\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return Index;\n}(React.Component);\n\n;\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    initialCards: bindActionCreators(initialCards, dispatch),\n    addItem: bindActionCreators(addItem, dispatch)\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    cards: state.cards\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);","map":{"version":3,"sources":["/Users/arstrel/practice/server side rendering/ssr/pages/index.js"],"names":["Card","React","bindActionCreators","initialCards","addItem","connect","Index","props","cards","map","eachCard","id","store","dispatch","Component","mapDispatchToProps","mapStateToProps","state"],"mappings":";;;;;;;;;AAAA,OAAO,aAAP;AACA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,kBAAR,QAAiC,OAAjC;AACA,SAASC,YAAT,EAAuBC,OAAvB,QAAqC,UAArC;AACA,SAAQC,OAAR,QAAsB,aAAtB;;IAEMC,K;;;;;;;;;;;;;6BAMM;AACJ,aACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,GAAG,EAAC,kBADR;AAEI,QAAA,SAAS,EAAC,aAFd;AAGI,QAAA,GAAG,EAAC,MAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAQI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAqB,UAACC,QAAD,EAAc;AAC/B,eAAO,MAAC,IAAD;AAAM,UAAA,GAAG,EAAEA,QAAQ,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OAFD,CAFR,CARJ,CADJ;AAkBJ;;;;;;;;;;;;AAvB+BC,gBAAAA,K,QAAAA,K;AAC5BA,gBAAAA,KAAK,CAACC,QAAN,CAAeV,YAAY,EAA3B;;;;;;;;;;;;;;;;;;;EAHaF,KAAK,CAACa,S;;AA0BzB;;AAED,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACF,QAAD,EAAc;AACrC,SAAO;AACHV,IAAAA,YAAY,EAAED,kBAAkB,CAACC,YAAD,EAAeU,QAAf,CAD7B;AAEHT,IAAAA,OAAO,EAAEF,kBAAkB,CAACE,OAAD,EAAUS,QAAV;AAFxB,GAAP;AAIH,CALD;;AAOA,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,SAAO;AACHT,IAAAA,KAAK,EAAES,KAAK,CAACT;AADV,GAAP;AAGH,CAJD;;AAMA,eAAeH,OAAO,CAACW,eAAD,EAAkBD,kBAAlB,CAAP,CAA6CT,KAA7C,CAAf","sourcesContent":["import './index.css';\nimport Card from './Card';\nimport React from 'react';\nimport {bindActionCreators} from 'redux';\nimport { initialCards, addItem} from '../store';\nimport {connect} from 'react-redux';\n\nclass Index extends React.Component {\n   \n    static async getInitialProps ({store}) {\n       store.dispatch(initialCards());\n    }\n\n   render() {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <img \n                        src=\"/static/logo.png\"\n                        className=\"static-logo\" \n                        alt=\"logo\"\n                    />\n                </header>\n                <div className=\"Grid\">\n                    {\n                        this.props.cards.map((eachCard) => {\n                            return <Card key={eachCard.id}/>\n                        })\n                    }\n                </div>\n            </div>\n        )\n   }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        initialCards: bindActionCreators(initialCards, dispatch),\n        addItem: bindActionCreators(addItem, dispatch)\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        cards: state.cards,\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Index)"]},"metadata":{},"sourceType":"module"}